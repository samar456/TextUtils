{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Message.js","App.js","reportWebVitals.js","index.js"],"names":["navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textform","_useState","useState","color","_useState2","_slicedToArray","myStyle","setmyStyle","_useState3","_useState4","text","SetText","Fragment","style","heading","value","placeholder","style1","backgroundColor","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","display","marginRight","x","filter","element","Message","height","alert","typ","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","Navbar","aboutText","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.f29454e9.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\nexport default function navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n   <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label= \"toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n         <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n         <a className=\"nav-link\" href=\"/About\">{props.aboutText}</a>\r\n        </li> */}\r\n       \r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\"  onClick ={props.toggleMode} type=\"checkbox\"   id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n     </div>\r\n     \r\n    </div>\r\n  </div>\r\n</nav> \r\n  )\r\n}\r\nnavbar.propTypes={ // Here it is a function name \r\n    title :PropTypes.string.isRequired,\r\n// aboutText:PropTypes.string\r\n}\r\nnavbar.defaultProps={    // Here it is also function name if proptypes are not defined in app.js then these values are replaced \r\n    title :'Write Title Here',\r\n    // aboutText:'Write About Text Here'\r\n}\r\n","import React ,{useState}from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const [myStyle,setmyStyle]=useState({\r\n color: '#FFD3B0'\r\n      \r\n    })\r\nlet mystyle={\r\n    display: 'inline',\r\n    marginRight: '20px'\r\n}\r\nconst [text,SetText]=useState(\"\");\r\n    // SetText(\"Enter the new text here\");\r\n    const handleUpclick=()=>{\r\n        // console.log(\"UpperCase was clicked \" + text);\r\n        let newText = text.toUpperCase();\r\n        SetText(newText);\r\n        props.showAlert(\"Converted to Uppercase ! \",\"success\");\r\n           \r\n    }\r\n    const handleLoclick=()=>{\r\n        // console.log(\"LowerCase was clicked \" + text);\r\n        let newText = text.toLowerCase();\r\n        SetText(newText);\r\n        props.showAlert(\"Converted to Lowercase ! \",\"success\");\r\n\r\n           \r\n    }\r\n    const handleOnchange=(event)=>{\r\n        // console.log(\"On change\");\r\n        SetText(event.target.value);\r\n    }\r\n    const cleartext=()=>{\r\n        // console.log(\"On change\");\r\n        SetText(' ');\r\n        props.showAlert(\"Text Cleared ! \",\"success\");\r\n\r\n    }\r\n    const handlecopy=()=>{\r\n        var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text copied to Clipboard ! \",\"success\");\r\n\r\n    }\r\n    const handleExtraspaces=()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        SetText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces are Removed ! \",\"success\");\r\n\r\n    }\r\n  const changecolor=(event)=>{\r\nvar x =event.target.value;\r\nsetmyStyle({\r\n    color: x\r\n  \r\n})\r\n\r\n}\r\n\r\nreturn (\r\n    <>\r\n \r\n    <div className='container'>\r\n\r\n<div className=\"mb-3\">\r\n    <h1 style ={{color : props.mode==='light'?'#042743':'white'}}>{props.heading}</h1>\r\n  <textarea className=\"form-control\" value = {text} placeholder='Enter or paste your text here' style1 ={myStyle} style ={{backgroundColor : props.mode==='light'?'white':'grey' , color : props.mode ==='light'?myStyle.color:'white'}} onChange ={handleOnchange}id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n</div>\r\n<button disabled ={text.length===0}className=\"btn btn-primary mx-2 mb-4\" onClick={handleUpclick} >Convert to UpperCase </button>\r\n<button disabled ={text.length===0}  className=\"btn btn-primary mx-2 mb-4\" onClick={handleLoclick} >Convert to LowerCase </button>\r\n<button disabled ={text.length===0} className=\"btn btn-primary mx-2 mb-4\" onClick={cleartext} >Clear text </button>\r\n<button disabled ={text.length===0} className=\"btn btn-primary mx-2 mb-4\" onClick={handlecopy} >Copy text </button>\r\n<button disabled ={text.length===0} className=\"btn btn-primary mx -2 mb-4\" onClick={handleExtraspaces} >Remove Extra spaces </button>\r\n\r\n\r\n    </div>\r\n    <div className=\"container\" style ={{color : props.mode==='light'?'#042743':'white'}} >\r\n    {/* disabled ={props.mode=='dark'} */} \r\n     {/* To make a button disabled */}\r\n<h1 style={mystyle}>{props.mode==='light'?\"Choose your color\":\"\"}</h1>\r\n<input type=\"color\" className=\"form-control form-control-color\" id=\"exampleColorInput\" style={props.mode === 'light'?{display:'inline-block'}:{display:'none'}} value={props.mode==='light'?myStyle.color:'#000000'} onChange={changecolor} title=\"Choose your color\"></input>\r\n{/* <p>{props.mode==='light'?\"\":\"=> (color choice is not available in dark mode)\"}</p> */}\r\n    </div>\r\n    <div className=\"container my-2\" style ={{color : props.mode==='light'?'#042743':'white'}} >\r\n<h1 >Your text Summary</h1>\r\n \r\n<p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n<p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes required to read the given text</p>\r\n<h2>Preview</h2>\r\n<p>{text.length>0?text:\"Enter something in the TEXTAREA above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function Message(props) {\r\n  const capitalize = (word)=>{\r\n  const lower = word.toLowerCase();\r\n  return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n   <div style ={{height: '50px'}}>\r\n    {props.alert &&  <div className={`alert alert-${props.alert.typ}  alert-dismissible fade show`} role=\"alert\">\r\n                  {capitalize(props.alert.typ)}: {props.alert.msg}\r\n                    </div>}\r\n                    </div>\r\n   \r\n  )\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\"; // here Navbar is name of file not a function\nimport Textform from \"./Components/Textform\";\n// import About from \"./Components/About\";\nimport React, { useState } from \"react\";\nimport Message from \"./Components/Message\";\n// import { BrowserRouter ,Route,Routes } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      typ: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"DarkMode has been enabled\", \"success\");\n      // document.title = \"TextUtils-DarkMode\";\n      // setInterval(() => {\n      //   document.title='TextUtils is Amazing';\n\n      // },3000);\n      // setInterval(() => {\n      //   document.title='Install TextUtils now';\n\n      // },2000);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#FFFFFF\";\n      showAlert(\"LightMode has been enabled\", \"success\");\n      // document.title = \"TextUtils-LightMode\";\n    }\n  };\n  return (\n    <>\n    \n    \n    <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Message alert={alert} />\n\n    <div className = \"container my-3\">\n    <Textform\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze\"\n                mode={mode}\n              />\n  </div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}